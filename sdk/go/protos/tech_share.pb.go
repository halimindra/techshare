// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/tech_share.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PeopleRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeopleRequest) Reset()         { *m = PeopleRequest{} }
func (m *PeopleRequest) String() string { return proto.CompactTextString(m) }
func (*PeopleRequest) ProtoMessage()    {}
func (*PeopleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd2563b1d946a7b, []int{0}
}

func (m *PeopleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeopleRequest.Unmarshal(m, b)
}
func (m *PeopleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeopleRequest.Marshal(b, m, deterministic)
}
func (m *PeopleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeopleRequest.Merge(m, src)
}
func (m *PeopleRequest) XXX_Size() int {
	return xxx_messageInfo_PeopleRequest.Size(m)
}
func (m *PeopleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeopleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeopleRequest proto.InternalMessageInfo

func (m *PeopleRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type PeopleResponse struct {
	People               []*Person `protobuf:"bytes,1,rep,name=people,proto3" json:"people,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PeopleResponse) Reset()         { *m = PeopleResponse{} }
func (m *PeopleResponse) String() string { return proto.CompactTextString(m) }
func (*PeopleResponse) ProtoMessage()    {}
func (*PeopleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd2563b1d946a7b, []int{1}
}

func (m *PeopleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeopleResponse.Unmarshal(m, b)
}
func (m *PeopleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeopleResponse.Marshal(b, m, deterministic)
}
func (m *PeopleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeopleResponse.Merge(m, src)
}
func (m *PeopleResponse) XXX_Size() int {
	return xxx_messageInfo_PeopleResponse.Size(m)
}
func (m *PeopleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeopleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeopleResponse proto.InternalMessageInfo

func (m *PeopleResponse) GetPeople() []*Person {
	if m != nil {
		return m.People
	}
	return nil
}

type Person struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address              *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd2563b1d946a7b, []int{2}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type Address struct {
	City                 string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country              string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bd2563b1d946a7b, []int{3}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func init() {
	proto.RegisterType((*PeopleRequest)(nil), "orami.PeopleRequest")
	proto.RegisterType((*PeopleResponse)(nil), "orami.PeopleResponse")
	proto.RegisterType((*Person)(nil), "orami.Person")
	proto.RegisterType((*Address)(nil), "orami.Address")
}

func init() { proto.RegisterFile("protos/tech_share.proto", fileDescriptor_0bd2563b1d946a7b) }

var fileDescriptor_0bd2563b1d946a7b = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x6b, 0xf3, 0x30,
	0x10, 0x86, 0x3f, 0x3b, 0x9f, 0x6d, 0x7c, 0x26, 0x1e, 0x8e, 0x94, 0x9a, 0x4e, 0xc6, 0x10, 0xd0,
	0xe4, 0x80, 0x3b, 0x04, 0xba, 0xb5, 0x4b, 0xd6, 0xa0, 0x96, 0x0e, 0x5d, 0x8a, 0x6b, 0x1f, 0xb5,
	0x20, 0xb6, 0x5c, 0x49, 0x19, 0xf2, 0xef, 0x4b, 0x24, 0xb9, 0x94, 0x4e, 0xba, 0x7b, 0x4e, 0x3c,
	0xf0, 0xbe, 0x70, 0x3b, 0x2b, 0x69, 0xa4, 0xde, 0x19, 0xea, 0x86, 0x77, 0x3d, 0xb4, 0x8a, 0x6a,
	0x4b, 0x30, 0x92, 0xaa, 0x1d, 0x45, 0xb5, 0x85, 0xf5, 0x91, 0xe4, 0x7c, 0x22, 0x4e, 0x5f, 0x67,
	0xd2, 0x06, 0x37, 0x10, 0x9d, 0xc4, 0x28, 0x4c, 0x11, 0x94, 0x01, 0x8b, 0xb8, 0x5b, 0xaa, 0x3d,
	0xe4, 0xcb, 0x37, 0x3d, 0xcb, 0x49, 0x13, 0x6e, 0x21, 0x9e, 0x2d, 0x29, 0x82, 0x72, 0xc5, 0xb2,
	0x66, 0x5d, 0x5b, 0x61, 0x7d, 0x24, 0xa5, 0xe5, 0xc4, 0xfd, 0xb1, 0x7a, 0x85, 0xd8, 0x11, 0xcc,
	0x21, 0x14, 0xbd, 0xb7, 0x86, 0xa2, 0x47, 0x84, 0xff, 0x53, 0x3b, 0x52, 0x11, 0x96, 0x01, 0x4b,
	0xb9, 0x9d, 0x91, 0x41, 0xd2, 0xf6, 0xbd, 0x22, 0xad, 0x8b, 0x55, 0x19, 0xb0, 0xac, 0xc9, 0xbd,
	0xf5, 0xd1, 0x51, 0xbe, 0x9c, 0xab, 0x3d, 0x24, 0x9e, 0x5d, 0x45, 0x9d, 0x30, 0x17, 0xab, 0x4e,
	0xb9, 0x9d, 0xb1, 0x80, 0xa4, 0x93, 0xe7, 0xc9, 0xa8, 0x8b, 0xf7, 0x2f, 0x6b, 0x73, 0x80, 0xf4,
	0x85, 0xba, 0xe1, 0xf9, 0x5a, 0x05, 0x3e, 0x40, 0x7a, 0x20, 0xe3, 0x92, 0xe1, 0xe6, 0x27, 0xc1,
	0xaf, 0x3e, 0xee, 0x6e, 0xfe, 0x50, 0x17, 0xbf, 0xfa, 0xf7, 0x94, 0xbd, 0xa5, 0x9f, 0x72, 0xe7,
	0xea, 0xfd, 0x88, 0xed, 0x7b, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x5e, 0xd3, 0xef, 0x6f,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TechShareClient is the client API for TechShare service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TechShareClient interface {
	GetPeople(ctx context.Context, in *PeopleRequest, opts ...grpc.CallOption) (*PeopleResponse, error)
}

type techShareClient struct {
	cc *grpc.ClientConn
}

func NewTechShareClient(cc *grpc.ClientConn) TechShareClient {
	return &techShareClient{cc}
}

func (c *techShareClient) GetPeople(ctx context.Context, in *PeopleRequest, opts ...grpc.CallOption) (*PeopleResponse, error) {
	out := new(PeopleResponse)
	err := c.cc.Invoke(ctx, "/orami.TechShare/GetPeople", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TechShareServer is the server API for TechShare service.
type TechShareServer interface {
	GetPeople(context.Context, *PeopleRequest) (*PeopleResponse, error)
}

func RegisterTechShareServer(s *grpc.Server, srv TechShareServer) {
	s.RegisterService(&_TechShare_serviceDesc, srv)
}

func _TechShare_GetPeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeopleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TechShareServer).GetPeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orami.TechShare/GetPeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TechShareServer).GetPeople(ctx, req.(*PeopleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TechShare_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orami.TechShare",
	HandlerType: (*TechShareServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPeople",
			Handler:    _TechShare_GetPeople_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/tech_share.proto",
}
